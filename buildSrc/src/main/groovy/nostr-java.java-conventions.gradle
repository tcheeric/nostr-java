plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'groovy-gradle-plugin'
    id 'org.springframework.boot'
    id 'com.adarshr.test-logger'
    id 'io.spring.dependency-management'
}

group = 'xyz.tcheeric'
version = '0.6.5-SNAPSHOT'
description = 'nostr-java'

java.sourceCompatibility = JavaVersion.VERSION_21
java.targetCompatibility = JavaVersion.VERSION_21

repositories {
    gradlePluginPortal()
    mavenLocal()
    mavenCentral()
    maven {
        uri('https://repo.maven.apache.org/maven2/')
        url 'https://plugins.gradle.org/m2/'
    }
////        TODO: eric may want to provide his publishing specs
}

//publishing {
//    publications {
//        nostrjava(MavenPublication) {
//            from components.java
//        }
//    }
////        TODO: eric may want to provide his publishing specs
//    repositories {
//        someRemoteRepo()
//    }
//}

dependencies {
    def springBootVersion = '3.4.3'
    def apacheCommonsLang3 = '3.17.0'
    def jacksonModuleAfterburner = '2.18.3'
    def googleGuava = '33.2.1-jre'
    def bouncyCastle = '1.80'
    def awaitility = '4.2.0'
//    TODO: save below/Modulith for multi-module integration testing
    def springModulithVersion = '1.3.3'
    def lombok = '1.18.36'

    implementation 'org.springframework.boot:spring-boot-starter:' + springBootVersion
    implementation 'org.springframework.boot:spring-boot-devtools:' + springBootVersion
    annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure:' + springBootVersion
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:' + springBootVersion

    implementation 'org.springframework.boot:spring-boot-starter-validation:' + springBootVersion
    implementation 'org.springframework.boot:spring-boot-starter-websocket:' + springBootVersion

    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner:' + jacksonModuleAfterburner
    implementation 'org.bouncycastle:bcprov-jdk18on:' + bouncyCastle
    
    implementation 'org.apache.commons:commons-lang3:' + apacheCommonsLang3
    implementation 'com.google.guava:guava:' + googleGuava
    implementation 'org.awaitility:awaitility:' + awaitility
    annotationProcessor 'org.awaitility:awaitility:' + awaitility
    implementation 'org.projectlombok:lombok:' + lombok
    annotationProcessor 'org.projectlombok:lombok:' + lombok

    testImplementation 'org.projectlombok:lombok:' + lombok
    testImplementation 'org.awaitility:awaitility:' + awaitility

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.adarshr:gradle-test-logger-plugin:4.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:' + springBootVersion
    testAnnotationProcessor 'org.projectlombok:lombok:' + lombok
}

subprojects { apply plugin: 'com.adarshr.test-logger' }

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.test {
//    systemProperty("spring.profiles.active", "test")
    useJUnitPlatform()
}

tasks.bootJar {
    enabled = false
}

tasks.jar {
    archiveClassifier = ''
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}
