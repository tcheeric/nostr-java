name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event_name == 'release' && github.event.action == 'published' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout release tag
        if: ${{ github.event_name == 'release' }}
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Checkout default branch
        if: ${{ github.event_name != 'release' }}
        uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
      - name: Configure Maven
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>reposilite-releases</id>
                <username>${MAVEN_USERNAME}</username>
                <password>${MAVEN_PASSWORD}</password>
              </server>
              <server>
                <id>reposilite-snapshots</id>
                <username>${MAVEN_USERNAME}</username>
                <password>${MAVEN_PASSWORD}</password>
              </server>
              <server>
                <id>gpg.passphrase</id>
                <passphrase>${GPG_PASSPHRASE}</passphrase>
              </server>
            </servers>
          </settings>
          EOF
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Publish artifacts
        run: ./mvnw -q deploy
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
